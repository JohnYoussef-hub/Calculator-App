<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        unuUOj1xQl899vn12Ou12GtpSq3xEIcX+au9uQVkU9EvIbsv0JUUAJJH2Cj+pc0eIE1hsuZM/vbLcePQ
        qNXqLJxD19JQYMmrwAtiFfq5KwBERAEgIgoAEVEAiIgCQEQUACKiABARBYCIKABERAEgogBQE4goAES6
        sQ91ff8v+mzAI81HL4q889E74flvb/y7aBNrpqcDF3pnn24PgKOej97BHbDI89F3N55/0QNYAVBQueej
        d8g5FNX0yrpSUGX4DKT56CJdHAAiogAQEQWAiCgAREQBICIKABFRAIiIAkBEFAAiCgA1gYgCQEQUADoH
        PXfpJkWfDaj56O2l9RgUAG2l+ejtpfUYFABtLyDNR28frcdQcPoMKnlpPQYFgIgoAEREASAiCgARUQCI
        iAJARBQAIqIAEBEFgIgoAEREASAixQuAoM2PL8XvQ3rubZJ3NmCe+fjan734tB5DlwdA3vn4Xb8/e8Fp
        PYYuDwDNx+9uev0LTp/BRRQAIqIAEBEFgIgoAEREASAiCgARUQCIiAJARBQAIqIAEBEFgIgoAOTYSTvk
        GGr/gso7GzDv/vB592cv+v70eTvfCTnPfXp3X9CbQTvav/ABkGd/+Fbsz17k/elbYToA875+WpSlPe1f
        +ABoxf7wYZsfv9s78BI1Q/dqxWVf2qa/beUxRBQAIqIAEBEFgIgoAEREASAiCgARUQCIiAJARBQAIqIA
        EBEFgIh0UwAEBX58kaLXXy6t2B242f3hW7E/e5H3pxcVf97+n5vl/HstCCLSvLz9X0RERERERERERERE
        REREREREREREREREREREREREyuv/A+rfK+DwC5mWAAAAAElFTkSuQmCC
</value>
  </data>
</root>